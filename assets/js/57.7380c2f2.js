(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{369:function(t,a,s){"use strict";s.r(a);var e=s(25),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"栈stack"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#栈stack"}},[t._v("#")]),t._v(" 栈stack")]),t._v(" "),a("p",[a("code",[t._v("#include<stack>")])]),t._v(" "),a("p",[t._v("通过二次封装双端队列（depue）容器，实现先进后出的栈数据结构。")]),t._v(" "),a("h2",{attrs:{id:"_1-常用方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-常用方法"}},[t._v("#")]),t._v(" 1. 常用方法")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("作用")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("用法")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("实例")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("构造")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("stack<类型> stk")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("stack<int> stk;")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("进栈")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v(".push(元素)")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("stk.push(1);")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("出栈")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v(".pop()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("stk.pop();")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("取栈顶")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v(".top()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("int a = stk.top();")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("查看大小/清空/判空")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("与vector相同")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("略")])])])]),t._v(" "),a("h2",{attrs:{id:"_2-适用情形"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-适用情形"}},[t._v("#")]),t._v(" 2. 适用情形")]),t._v(" "),a("p",[t._v("如果不卡常的话，就直接用它而不需要手写栈了。")]),t._v(" "),a("p",[t._v("另外，vector也可以当栈用，vector的"),a("code",[t._v(".back()")]),t._v("取尾部元素，就相当于取栈顶，"),a("code",[t._v(".push_back()")]),t._v("相当于进栈，"),a("code",[t._v(".pop_back()")]),t._v("相当于出栈，但栈占的空间相对于较小，竞赛有时会卡内存")]),t._v(" "),a("h2",{attrs:{id:"_3-注意事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-注意事项"}},[t._v("#")]),t._v(" 3. 注意事项")]),t._v(" "),a("p",[t._v("不可以访问内部元素！"),a("strong",[t._v("下面都是错误用法")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" stk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" stk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" ele "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" stk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" ele"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])])])}),[],!1,null,null,null);a.default=n.exports}}]);